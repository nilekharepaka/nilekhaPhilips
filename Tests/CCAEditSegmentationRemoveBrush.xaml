<Activity mc:Ignorable="sap sap2010" x:Class="CCAEditSegmentationRemoveBrush" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="965,9695" sap2010:WorkflowViewState.IdRef="CCAEditSegmentationRemoveBrush_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:aca="clr-namespace:AVCommon.Common.AVApps;assembly=AVCommon" xmlns:acaa="clr-namespace:AVCommon.Common.AVW.ActivitiesOnPatientDirectory;assembly=AVCommon" xmlns:acal="clr-namespace:AVCommon.Common.AVW.Login;assembly=AVCommon" xmlns:acama="clr-namespace:AVCommon.Common.AVApps.MRCAppsSuite.AVViewer;assembly=AVCommon" xmlns:acas="clr-namespace:AVCommon.Common.AVApps.StandaloneGfnPD;assembly=AVCommon" xmlns:acc="clr-namespace:AVCommon.Common.Core;assembly=AVCommon" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:t="clr-namespace:TestScriptLogGenerator;assembly=TestScriptLogGenerator" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>TestScriptLogGenerator</x:String>
      <x:String>AVCommon.Common.Core</x:String>
      <x:String>AVCommon.Common.AVW.Login</x:String>
      <x:String>AVCommon.Common.AVApps</x:String>
      <x:String>AVCommon.Common.AVApps.MRCAppsSuite.AVViewer</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>AVCommon.Common.AVApps.StandaloneGfnPD</x:String>
      <x:String>AVCommon.Common.AVW.ActivitiesOnPatientDirectory</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>TestScriptLogGenerator</AssemblyReference>
      <AssemblyReference>AVCommon</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CCAEditSegmentationRemoveBrush" sap:VirtualizedContainerService.HintSize="734,9630" sap2010:WorkflowViewState.IdRef="Sequence_11">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="672,380" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Dataset used :   &#xA;Multiphase Cardiac CT&#xA;&#xA;Dataset  Path: &#xA;\\ingbtcpic5vw113\ICAP_Repository\ISP_Verification_Datasets\Cardiac Apps\Philips\CT\CCA\Cardiac 10 Phases&#xA;&#xA;Preconditons : &#xA;1. Load Harmony Patient Directory.&#xA;2. Filter and select study &quot;Cardiac 10 Phases&quot; (Cardiac 3 Phases) and select Cardiac CT. AV Viewer should be displayed.&#xA;3. Launch CCA. CCA application should be loaded. DefaultDiagnosisWithoutResult layout should be displayed. Activate all algorithms. CoronaryOverviewLayout displayed." />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="672,9099" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Default="grapheneapplethost.exe" Name="WebBrowserType" />
        <Variable x:TypeArguments="x:Boolean" Name="AppLaunchStatus" />
        <Variable x:TypeArguments="ui:UiElement" Name="RootWindow" />
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="WorkflowAnalyserPer" />
        <Variable x:TypeArguments="njl:JObject" Name="JsonForLogging" />
        <Variable x:TypeArguments="x:String" Default="1549725_EditSegmentationRemoveBrush" Name="TestName" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="634,8871" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="572,8760" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Default="*Cardiac*" Name="WebBrowserPageTitle" />
              <Variable x:TypeArguments="njl:JObject" Name="AppConfig" />
              <Variable x:TypeArguments="x:String" Name="ServerIPAddress" />
              <Variable x:TypeArguments="x:Boolean" Name="AppOpened" />
              <Variable x:TypeArguments="x:String" Name="PDApp" />
              <Variable x:TypeArguments="x:String" Name="Username" />
              <Variable x:TypeArguments="x:String" Name="Password" />
              <Variable x:TypeArguments="x:Boolean" Name="PortalLaunchStatus" />
              <Variable x:TypeArguments="x:Boolean" Default="True" Name="AutomateViaWebBrowser" />
              <Variable x:TypeArguments="x:String" Name="StandalonePDURL" />
              <Variable x:TypeArguments="x:Boolean" Name="ViewerLaunchStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="LayoutStatus" />
              <Variable x:TypeArguments="x:String" Name="LayoutText" />
              <Variable x:TypeArguments="x:Boolean" Name="EditSegmentationResult" />
              <Variable x:TypeArguments="x:Boolean" Name="VerificationStatusLog" />
              <Variable x:TypeArguments="x:Boolean" Name="InjectDyeStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="AddBalloonStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="RemoveBrushStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="AddCoronaryStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="CancelStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="CurveActivateCommandStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="CurveLumensCalculateCommandStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="PlanningModeResultsActivateCommandStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="EditCurveStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="ContinueCenterlineDistalStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="ContinueCenterlineProximalStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="UndoStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="ResetStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="AcceptStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="RedoStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="ClickStatus" />
              <Variable x:TypeArguments="x:Boolean" Name="BrushStatusAfterRemove" />
              <Variable x:TypeArguments="x:Boolean" Name="StatusAfterUndo" />
              <Variable x:TypeArguments="x:Boolean" Name="StatusAfterRedo" />
              <Variable x:TypeArguments="x:Boolean" Name="StatusAfterReset" />
              <Variable x:TypeArguments="x:Double" Name="DyeColorPerctAfterReset" />
              <Variable x:TypeArguments="x:Boolean" Name="ClickCancelStatus" />
              <Variable x:TypeArguments="x:String" Name="ScreenshotVolumePath" />
              <Variable x:TypeArguments="x:Boolean" Name="ValidationStatus" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <t:Generate_Test_Case DisplayName="Generate Test Case" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="Generate_Test_Case_1">
              <t:Generate_Test_Case.TestCaseJSONObject>
                <OutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">JsonForLogging</CSharpReference>
                </OutArgument>
              </t:Generate_Test_Case.TestCaseJSONObject>
              <t:Generate_Test_Case.TestCaseName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">TestName</CSharpValue>
                </InArgument>
              </t:Generate_Test_Case.TestCaseName>
            </t:Generate_Test_Case>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_1">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">"Start Test CCA Edit Segmentation - Remove Brush "</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <acc:AppConfigReader BreakTriggerScopeInArgument="{x:Null}" StopTriggersOutArgument="{x:Null}" ConfigFilePath="C:\UiPathTestAutomation\AppConfig.json" DisplayName=" ()" sap:VirtualizedContainerService.HintSize="510,243" sap2010:WorkflowViewState.IdRef="AppConfigReader_1">
              <acc:AppConfigReader.ConfigFileOutputInJSON>
                <OutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">AppConfig</CSharpReference>
                </OutArgument>
              </acc:AppConfigReader.ConfigFileOutputInJSON>
            </acc:AppConfigReader>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="510,318" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">AutomateViaWebBrowser</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">Convert.ToBoolean(AppConfig.SelectToken("AVApps.AutomateViaWebBrowser").ToString())</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">WebBrowserPageTitle</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">AppConfig.SelectToken("AVApps.WebBrowserPageTitle").ToString()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">WebBrowserType</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">AppConfig.SelectToken("AVApps.WebBrowserType").ToString()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">ServerIPAddress</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">AppConfig.SelectToken("Generic.ServerIP").ToString()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">PDApp</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">AppConfig.SelectToken("Generic.PDLaunchType").ToString().ToLower()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">Username</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">AppConfig.SelectToken("Generic.username").ToString()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">Password</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">AppConfig.SelectToken("Generic.password").ToString()</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">WorkflowAnalyserPer</CSharpReference>
                      </OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">Convert.ToBoolean(AppConfig.SelectToken("Generic.FindWorkflowCoveragePercentage").ToString())</CSharpValue>
                      </InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <acc:KillActiveChromeBrowser sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="KillActiveChromeBrowser_1">
              <acc:KillActiveChromeBrowser.BrowserCloseStatus>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">AppLaunchStatus</CSharpReference>
                </OutArgument>
              </acc:KillActiveChromeBrowser.BrowserCloseStatus>
              <acc:KillActiveChromeBrowser.BrowserType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">WebBrowserType</CSharpValue>
                </InArgument>
              </acc:KillActiveChromeBrowser.BrowserType>
            </acc:KillActiveChromeBrowser>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_2">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">"PreStep 1: Launch PD and AV viewer Application "</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <aca:PDAppLaunch sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="PDAppLaunch_1">
              <aca:PDAppLaunch.ApplicationOpenStatus>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">AppOpened</CSharpReference>
                </OutArgument>
              </aca:PDAppLaunch.ApplicationOpenStatus>
              <aca:PDAppLaunch.BrowserType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">WebBrowserType</CSharpValue>
                </InArgument>
              </aca:PDAppLaunch.BrowserType>
            </aca:PDAppLaunch>
            <If sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">PDApp == "gfn" &amp;&amp; AppOpened</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,1070" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">StandalonePDURL</CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">AppConfig.SelectToken("Generic.PDLaunchGfnHost").ToString()</CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <acas:LaunchAVViewer AppModality="CardiacCT" sap:VirtualizedContainerService.HintSize="434,294" sap2010:WorkflowViewState.IdRef="LaunchAVViewer_1" PatientName="Cardiac 10 Phases" RowNumberToPerformCheckOperation="2">
                    <acas:LaunchAVViewer.BrowserType>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">WebBrowserType</CSharpValue>
                      </InArgument>
                    </acas:LaunchAVViewer.BrowserType>
                    <acas:LaunchAVViewer.StandaloneURL>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">StandalonePDURL</CSharpValue>
                      </InArgument>
                    </acas:LaunchAVViewer.StandaloneURL>
                  </acas:LaunchAVViewer>
                  <aca:FindRootForAVApps sap:VirtualizedContainerService.HintSize="434,243" sap2010:WorkflowViewState.IdRef="FindRootForAVApps_2">
                    <aca:FindRootForAVApps.BrowserProcess>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">WebBrowserType+".exe"</CSharpValue>
                      </InArgument>
                    </aca:FindRootForAVApps.BrowserProcess>
                    <aca:FindRootForAVApps.MainWindow>
                      <OutArgument x:TypeArguments="ui:UiElement">
                        <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">RootWindow</CSharpReference>
                      </OutArgument>
                    </aca:FindRootForAVApps.MainWindow>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <aca:FindRootForAVApps.WebBrowserAutomation>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">AutomateViaWebBrowser</CSharpValue>
                      </InArgument>
                    </aca:FindRootForAVApps.WebBrowserAutomation>
                    <aca:FindRootForAVApps.WebBrowserTitle>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">WebBrowserPageTitle</CSharpValue>
                      </InArgument>
                    </aca:FindRootForAVApps.WebBrowserTitle>
                  </aca:FindRootForAVApps>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\CheckAVViewerLaunched.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\CheckAVViewerLaunched.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                        <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">RootWindow</CSharpValue>
                      </InArgument>
                      <OutArgument x:TypeArguments="x:Boolean" x:Key="AVViewerLaunchedStatus">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">ViewerLaunchStatus</CSharpReference>
                      </OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="ISP should be launched and AV Viewer application should be launched" ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_1" OutputMessageFormat="ISP and AV Viewer were launched" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
                    <uta:VerifyExpression.Expression>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">AppOpened &amp;&amp; ViewerLaunchStatus</CSharpValue>
                      </InArgument>
                    </uta:VerifyExpression.Expression>
                    <uta:VerifyExpression.Result>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">VerificationStatusLog</CSharpReference>
                      </OutArgument>
                    </uta:VerifyExpression.Result>
                  </uta:VerifyExpression>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,1148" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_3">
                    <ui:LogMessage.Level>
                      <InArgument x:TypeArguments="ui:LogLevel">
                        <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Level>
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">"PreStep 1: Launch Portal, Launch AV Viewer application and validate"</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                  <acal:HandleInitializationFailedPopup sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="HandleInitializationFailedPopup_1" />
                  <uta:VerifyExpression KeepScreenshots="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="Launch Portal" ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_2" OutputMessageFormat="Portal is launched" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
                    <uta:VerifyExpression.Expression>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">AppOpened</CSharpValue>
                      </InArgument>
                    </uta:VerifyExpression.Expression>
                  </uta:VerifyExpression>
                  <acaa:SelectPatientFromPatientDirectory PatientSelectedStatus="{x:Null}" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="SelectPatientFromPatientDirectory_1" PatientName="Cardiac 10 Phases" />
                  <acaa:AVViewerLaunchInAVW sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="AVViewerLaunchInAVW_1">
                    <acaa:AVViewerLaunchInAVW.AppLaunched>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">AppLaunchStatus</CSharpReference>
                      </OutArgument>
                    </acaa:AVViewerLaunchInAVW.AppLaunched>
                  </acaa:AVViewerLaunchInAVW>
                  <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="Verifying the AV Viewer launch status" ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_3" OutputMessageFormat="Study is launched in AV Viewer" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
                    <uta:VerifyExpression.Expression>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">AppLaunchStatus</CSharpValue>
                      </InArgument>
                    </uta:VerifyExpression.Expression>
                    <uta:VerifyExpression.Result>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">VerificationStatusLog</CSharpReference>
                      </OutArgument>
                    </uta:VerifyExpression.Result>
                  </uta:VerifyExpression>
                  <aca:FindRootForAVApps sap:VirtualizedContainerService.HintSize="334,243" sap2010:WorkflowViewState.IdRef="FindRootForAVApps_1">
                    <aca:FindRootForAVApps.BrowserProcess>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">WebBrowserType+".exe"</CSharpValue>
                      </InArgument>
                    </aca:FindRootForAVApps.BrowserProcess>
                    <aca:FindRootForAVApps.MainWindow>
                      <OutArgument x:TypeArguments="ui:UiElement">
                        <CSharpReference x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">RootWindow</CSharpReference>
                      </OutArgument>
                    </aca:FindRootForAVApps.MainWindow>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <aca:FindRootForAVApps.WebBrowserAutomation>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">AutomateViaWebBrowser</CSharpValue>
                      </InArgument>
                    </aca:FindRootForAVApps.WebBrowserAutomation>
                    <aca:FindRootForAVApps.WebBrowserTitle>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">WebBrowserPageTitle</CSharpValue>
                      </InArgument>
                    </aca:FindRootForAVApps.WebBrowserTitle>
                  </aca:FindRootForAVApps>
                </Sequence>
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_4">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">"PreStep 2: Launch CCA Application"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">AppLaunchStatus</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <acama:LaunchSpecificApplication AppName="Cca" sap:VirtualizedContainerService.HintSize="510,294" sap2010:WorkflowViewState.IdRef="LaunchSpecificApplication_1" SeriesIndexToSelect="8">
              <acama:LaunchSpecificApplication.AppLaunchStatus>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">AppLaunchStatus</CSharpReference>
                </OutArgument>
              </acama:LaunchSpecificApplication.AppLaunchStatus>
              <acama:LaunchSpecificApplication.BrowserType>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">WebBrowserType+".exe"</CSharpValue>
                </InArgument>
              </acama:LaunchSpecificApplication.BrowserType>
              <acama:LaunchSpecificApplication.InputElement>
                <InArgument x:TypeArguments="ui:UiElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">RootWindow</CSharpValue>
                </InArgument>
              </acama:LaunchSpecificApplication.InputElement>
            </acama:LaunchSpecificApplication>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_5">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">"AppLaunchStatus : "+AppLaunchStatus</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">AppLaunchStatus</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\CheckCCAApplicationIsLaunched.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\CheckCCAApplicationIsLaunched.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CcaLaunchedStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">AppLaunchStatus</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="CCA application should launch" ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_4" OutputMessageFormat=" CCA application launched" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
              <uta:VerifyExpression.Expression>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">AppLaunchStatus</CSharpValue>
                </InArgument>
              </uta:VerifyExpression.Expression>
              <uta:VerifyExpression.Result>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">VerificationStatusLog</CSharpReference>
                </OutArgument>
              </uta:VerifyExpression.Result>
            </uta:VerifyExpression>
            <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">LayoutStatus</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\GetVolumeScreenshotBeforeEditSegmentation.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\GetVolumeScreenshotBeforeEditSegmentation.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="ScreenshotVolumePath">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">ScreenshotVolumePath</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_7">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">"Step-1 Click Edit Segmentetion"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\EditSegmentationAndValidate.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\EditSegmentationAndValidate.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="EditSegmentationStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">EditSegmentationResult</CSharpReference>
                </OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="browser">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">WebBrowserType</CSharpValue>
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="Segmentation layout should be displayed. In the Axial, Coronal, Sagittal and Volume viewports, only Coronary tissue should be displayed and no other." ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_6" OutputMessageFormat="Edit Segmentation displayed and the viewports were Verified and are only having coronary highlighted" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
              <uta:VerifyExpression.Expression>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">EditSegmentationResult</CSharpValue>
                </InArgument>
              </uta:VerifyExpression.Expression>
              <uta:VerifyExpression.Result>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">VerificationStatusLog</CSharpReference>
                </OutArgument>
              </uta:VerifyExpression.Result>
            </uta:VerifyExpression>
            <t:Log_Step_Details ActualText="Edit Segmentation displayed" Description="Click Edit Segmentetion" DisplayName="Log Step Details" ExpectedText="Segmentation layout should be displayed. In the Axial, Coronal, Sagittal and Volume viewports, only Coronary tissue should be displayed and no other." sap:VirtualizedContainerService.HintSize="510,345" sap2010:WorkflowViewState.IdRef="Log_Step_Details_1">
              <t:Log_Step_Details.Status>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">VerificationStatusLog</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.Status>
              <t:Log_Step_Details.TestCaseJSONObject>
                <InOutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">JsonForLogging</CSharpReference>
                </InOutArgument>
              </t:Log_Step_Details.TestCaseJSONObject>
              <t:Log_Step_Details.TestCaseName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">TestName</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.TestCaseName>
            </t:Log_Step_Details>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_8">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">"Step-2 Review Floating Toolbar"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\ClickViewport.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\ClickViewport.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">RootWindow</CSharpValue>
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ViewportIndex">1</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\DisplayCheckForAllFloatingBarIcons.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\DisplayCheckForAllFloatingBarIcons.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="InjectDyeStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">InjectDyeStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AddBalloonStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">AddBalloonStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="RemoveBrushStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">RemoveBrushStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AddCoronaryStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">AddCoronaryStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CancelStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">CancelStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CurveActivateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">CurveActivateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CurveLumensCalculateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">CurveLumensCalculateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="PlanningModeResultsActivateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">PlanningModeResultsActivateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="EditCurveStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">EditCurveStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ContinueCenterlineDistalStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">ContinueCenterlineDistalStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ContinueCenterlineProximalStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">ContinueCenterlineProximalStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="UndoStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">UndoStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ResetStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">ResetStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AcceptStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">AcceptStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="RedoStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">RedoStatus</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="Floating toolbar should change and following buttons only should be available.Inject Dye,Add Balloon,Remove Brush,Add Coronary,Cancel .Following buttons should not be displayed in Floating toolbar in Edit Segmentation mode:CurveActivateCommand,CurveLumensCalculateCommand,PlanningModeResultsActivateCommand,Edit Curve,Edit Lumen,Continue Centerline (Distal),Continue Centerline (Proximal),Edit Wall" ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_7" OutputMessageFormat="Floating toolbar changed and the specified icon appeared" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
              <uta:VerifyExpression.Expression>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">InjectDyeStatus &amp;&amp; AddBalloonStatus &amp;&amp; RemoveBrushStatus &amp;&amp; AddCoronaryStatus &amp;&amp; CancelStatus &amp;&amp; !CurveActivateCommandStatus &amp;&amp; !CurveLumensCalculateCommandStatus &amp;&amp; !PlanningModeResultsActivateCommandStatus &amp;&amp; !EditCurveStatus &amp;&amp; !ContinueCenterlineDistalStatus &amp;&amp; !ContinueCenterlineProximalStatus &amp;&amp; !AcceptStatus &amp;&amp; !RedoStatus</CSharpValue>
                </InArgument>
              </uta:VerifyExpression.Expression>
              <uta:VerifyExpression.Result>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">VerificationStatusLog</CSharpReference>
                </OutArgument>
              </uta:VerifyExpression.Result>
            </uta:VerifyExpression>
            <t:Log_Step_Details ActualText="Floating toolbar changed and the specified icon appeared" Description="Review Floating Toolbar." DisplayName="Log Step Details" ExpectedText="Floating toolbar should change and following buttons only should be available.Inject Dye,Add Balloon,Remove Brush,Add Coronary,Cancel .Following buttons should not be displayed in Floating toolbar in Edit Segmentation mode:CurveActivateCommand,CurveLumensCalculateCommand,PlanningModeResultsActivateCommand,Edit Curve,Edit Lumen,Continue Centerline (Distal),Continue Centerline (Proximal),Edit Wall" sap:VirtualizedContainerService.HintSize="510,345" sap2010:WorkflowViewState.IdRef="Log_Step_Details_2">
              <t:Log_Step_Details.Status>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">VerificationStatusLog</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.Status>
              <t:Log_Step_Details.TestCaseJSONObject>
                <InOutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">JsonForLogging</CSharpReference>
                </InOutArgument>
              </t:Log_Step_Details.TestCaseJSONObject>
              <t:Log_Step_Details.TestCaseName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">TestName</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.TestCaseName>
            </t:Log_Step_Details>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_9">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98">"Step-3 Click Remove Brush in floating bar."</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\ClickRemoveBrush.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\ClickRemoveBrush.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ClickStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_92">ClickStatus</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\DisplayCheckForAllFloatingBarIcons.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\DisplayCheckForAllFloatingBarIcons.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="InjectDyeStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">InjectDyeStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AddBalloonStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">AddBalloonStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="RemoveBrushStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">RemoveBrushStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AddCoronaryStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">AddCoronaryStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CancelStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">CancelStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CurveActivateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">CurveActivateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CurveLumensCalculateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">CurveLumensCalculateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="PlanningModeResultsActivateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_57">PlanningModeResultsActivateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="EditCurveStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">EditCurveStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ContinueCenterlineDistalStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_59">ContinueCenterlineDistalStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ContinueCenterlineProximalStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">ContinueCenterlineProximalStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="UndoStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">UndoStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ResetStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_62">ResetStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AcceptStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">AcceptStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="RedoStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_64">RedoStatus</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="Mouse pointer should change to Brush. Floating toolbar should contain following buttons only:Inject Dye,Add Balloon,Remove Brush,Add Coronary,Cancel" ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_8" OutputMessageFormat="Cursor pointer changed and the floating window had the specified buttons only" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
              <uta:VerifyExpression.Expression>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63" xml:space="preserve">ClickStatus &amp;&amp; InjectDyeStatus &amp;&amp; AddBalloonStatus &amp;&amp; RemoveBrushStatus &amp;&amp; AddCoronaryStatus &amp;&amp; CancelStatus &amp;&amp; !CurveActivateCommandStatus &amp;&amp;  !CurveLumensCalculateCommandStatus &amp;&amp; !PlanningModeResultsActivateCommandStatus &amp;&amp; !EditCurveStatus &amp;&amp; !ContinueCenterlineDistalStatus &amp;&amp; !ContinueCenterlineProximalStatus &amp;&amp; !UndoStatus &amp;&amp; !ResetStatus &amp;&amp; !AcceptStatus &amp;&amp; !RedoStatus</CSharpValue>
                </InArgument>
              </uta:VerifyExpression.Expression>
              <uta:VerifyExpression.Result>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_65">VerificationStatusLog</CSharpReference>
                </OutArgument>
              </uta:VerifyExpression.Result>
            </uta:VerifyExpression>
            <t:Log_Step_Details ActualText="Cursor pointer changed and the floating window had the specified buttons only" Description="Click Remove Brush in floating bar." DisplayName="Log Step Details" ExpectedText="Mouse pointer should change to Brush. Floating toolbar should contain following buttons only:Inject Dye,Add Balloon,Remove Brush,Add Coronary,Cancel" sap:VirtualizedContainerService.HintSize="510,345" sap2010:WorkflowViewState.IdRef="Log_Step_Details_3">
              <t:Log_Step_Details.Status>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">VerificationStatusLog</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.Status>
              <t:Log_Step_Details.TestCaseJSONObject>
                <InOutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_66">JsonForLogging</CSharpReference>
                </InOutArgument>
              </t:Log_Step_Details.TestCaseJSONObject>
              <t:Log_Step_Details.TestCaseName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">TestName</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.TestCaseName>
            </t:Log_Step_Details>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_10">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">"Step-4 Drag and release mouse pointer on an MPR."</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\RemoveBrushAndVerify.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\RemoveBrushAndVerify.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="BrushStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">BrushStatusAfterRemove</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\DisplayCheckForAllFloatingBarIcons.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\DisplayCheckForAllFloatingBarIcons.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="InjectDyeStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">InjectDyeStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AddBalloonStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">AddBalloonStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="RemoveBrushStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">RemoveBrushStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AddCoronaryStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">AddCoronaryStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CancelStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">CancelStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CurveActivateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_73">CurveActivateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="CurveLumensCalculateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_74">CurveLumensCalculateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="PlanningModeResultsActivateCommandStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_75">PlanningModeResultsActivateCommandStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="EditCurveStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_76">EditCurveStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ContinueCenterlineDistalStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_77">ContinueCenterlineDistalStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ContinueCenterlineProximalStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_78">ContinueCenterlineProximalStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="UndoStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_79">UndoStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ResetStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">ResetStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AcceptStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">AcceptStatus</CSharpReference>
                </OutArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="RedoStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">RedoStatus</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="The segment of overlay, where the drag was performed should be removed. Floating toolbar should contain following buttons only: Inject Dye,Add Balloon,Remove Brush,Add Coronary,Undo,Reset,Accept,Cancel" ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_9" OutputMessageFormat="Coronary Disappears on the screen and the Floating bar has the specified icons only" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
              <uta:VerifyExpression.Expression>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70" xml:space="preserve">BrushStatusAfterRemove &amp;&amp; InjectDyeStatus &amp;&amp; AddBalloonStatus &amp;&amp; RemoveBrushStatus &amp;&amp; AddCoronaryStatus &amp;&amp; CancelStatus &amp;&amp; !CurveActivateCommandStatus &amp;&amp;  !CurveLumensCalculateCommandStatus &amp;&amp; !PlanningModeResultsActivateCommandStatus &amp;&amp; !EditCurveStatus &amp;&amp; !ContinueCenterlineDistalStatus &amp;&amp; !ContinueCenterlineProximalStatus &amp;&amp; UndoStatus &amp;&amp; ResetStatus &amp;&amp; AcceptStatus &amp;&amp; !RedoStatus</CSharpValue>
                </InArgument>
              </uta:VerifyExpression.Expression>
              <uta:VerifyExpression.Result>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">VerificationStatusLog</CSharpReference>
                </OutArgument>
              </uta:VerifyExpression.Result>
            </uta:VerifyExpression>
            <t:Log_Step_Details ActualText="Coronary Disappears on the screen and the Floating bar has the specified icons only" Description="Drag and release mouse pointer on an MPR." DisplayName="Log Step Details" ExpectedText="The segment of overlay, where the drag was performed should be removed. Floating toolbar should contain following buttons only: Inject Dye,Add Balloon,Remove Brush,Add Coronary,Undo,Reset,Accept,Cancel" sap:VirtualizedContainerService.HintSize="510,345" sap2010:WorkflowViewState.IdRef="Log_Step_Details_4">
              <t:Log_Step_Details.Status>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">VerificationStatusLog</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.Status>
              <t:Log_Step_Details.TestCaseJSONObject>
                <InOutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">JsonForLogging</CSharpReference>
                </InOutArgument>
              </t:Log_Step_Details.TestCaseJSONObject>
              <t:Log_Step_Details.TestCaseName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">TestName</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.TestCaseName>
            </t:Log_Step_Details>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_11">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">"Step-5 Click Accept"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\ClickAccept.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\ClickAccept.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="ScreenshotVolumeBefore">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">ScreenshotVolumePath</CSharpValue>
                </InArgument>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="AcceptStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">AcceptStatus</CSharpReference>
                </OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" AlternativeVerificationTitle="Layout should change to CoronariesOverviewLayout and the newly added coronaries must be displayed on the Volume image." ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_10" OutputMessageFormat="Layout changed and volume viewport displyed added coronaries" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
              <uta:VerifyExpression.Expression>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">AcceptStatus</CSharpValue>
                </InArgument>
              </uta:VerifyExpression.Expression>
              <uta:VerifyExpression.Result>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">VerificationStatusLog</CSharpReference>
                </OutArgument>
              </uta:VerifyExpression.Result>
            </uta:VerifyExpression>
            <t:Log_Step_Details ActualText="Layout changed and volume viewport displyed added coronaries" Description="Click Accept" DisplayName="Log Step Details" ExpectedText="Layout should change to CoronariesOverviewLayout and the newly added coronaries must be displayed on the Volume image." sap:VirtualizedContainerService.HintSize="510,345" sap2010:WorkflowViewState.IdRef="Log_Step_Details_5">
              <t:Log_Step_Details.Status>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">VerificationStatusLog</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.Status>
              <t:Log_Step_Details.TestCaseJSONObject>
                <InOutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">JsonForLogging</CSharpReference>
                </InOutArgument>
              </t:Log_Step_Details.TestCaseJSONObject>
              <t:Log_Step_Details.TestCaseName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">TestName</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.TestCaseName>
            </t:Log_Step_Details>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,141" sap2010:WorkflowViewState.IdRef="LogMessage_12">
              <ui:LogMessage.Level>
                <InArgument x:TypeArguments="ui:LogLevel">
                  <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                </InArgument>
              </ui:LogMessage.Level>
              <ui:LogMessage.Message>
                <InArgument x:TypeArguments="x:Object">
                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">"Step-6 Verify Warning message notification"</CSharpValue>
                </InArgument>
              </ui:LogMessage.Message>
            </ui:LogMessage>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\ValidateValidationPopupMsg.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="510,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\ValidateValidationPopupMsg.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                  <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">RootWindow</CSharpValue>
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="ValidationStatus">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">ValidationStatus</CSharpReference>
                </OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="ExpectedPopupMsg">
                  <Literal x:TypeArguments="x:String">Lumen &amp; wall segmentations and findings were recalculated. Please verify.</Literal>
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <uta:VerifyExpression KeepScreenshots="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="False" DisplayName="Verify Expression" sap:VirtualizedContainerService.HintSize="510,90" sap2010:WorkflowViewState.IdRef="VerifyExpression_11" OutputMessageFormat="Validation message verified" TakeScreenshotInCaseOfFailingAssertion="True" TakeScreenshotInCaseOfSucceedingAssertion="True">
              <uta:VerifyExpression.AlternativeVerificationTitle>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_84">"A Warning message notification to Verify Centerline should be displayed for some seconds stating: \"Editing the segmentation might affect the centerline and its findings. Please verify the updated centerlines &amp; their findings.\""</CSharpValue>
                </InArgument>
              </uta:VerifyExpression.AlternativeVerificationTitle>
              <uta:VerifyExpression.Expression>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">ValidationStatus</CSharpValue>
                </InArgument>
              </uta:VerifyExpression.Expression>
              <uta:VerifyExpression.Result>
                <OutArgument x:TypeArguments="x:Boolean">
                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">VerificationStatusLog</CSharpReference>
                </OutArgument>
              </uta:VerifyExpression.Result>
            </uta:VerifyExpression>
            <t:Log_Step_Details ActualText="Validation message verified" Description="Verify Warning message notification." DisplayName="Log Step Details" sap:VirtualizedContainerService.HintSize="510,345" sap2010:WorkflowViewState.IdRef="Log_Step_Details_6">
              <t:Log_Step_Details.ExpectedText>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_85">"A Warning message notification to Verify Centerline should be displayed for some seconds stating: \"Editing the segmentation might affect the centerline and its findings. Please verify the updated centerlines &amp; their findings.\""</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.ExpectedText>
              <t:Log_Step_Details.Status>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">VerificationStatusLog</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.Status>
              <t:Log_Step_Details.TestCaseJSONObject>
                <InOutArgument x:TypeArguments="njl:JObject">
                  <CSharpReference x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">JsonForLogging</CSharpReference>
                </InOutArgument>
              </t:Log_Step_Details.TestCaseJSONObject>
              <t:Log_Step_Details.TestCaseName>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">TestName</CSharpValue>
                </InArgument>
              </t:Log_Step_Details.TestCaseName>
            </t:Log_Step_Details>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="450,769" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_13">
                <ui:LogMessage.Level>
                  <InArgument x:TypeArguments="ui:LogLevel">
                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">UiPath.Core.Activities.LogLevel.Error</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Level>
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">"Test case ended with exception :"+ exception.Message +" and exception source was: "+exception.Source</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
              <uix:NTakeScreenshot DisplayName="Take Screenshot" FileName="C:\\ExceptionScreenShots\\CCAChangeRenderingModesTest.png" FileNameMode="DateTime" sap:VirtualizedContainerService.HintSize="388,231" sap2010:WorkflowViewState.IdRef="NTakeScreenshot_1" Version="V3" />
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_14">
                <ui:LogMessage.Level>
                  <InArgument x:TypeArguments="ui:LogLevel">
                    <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Level>
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">exception.Message</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
              <Rethrow sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence sap:VirtualizedContainerService.HintSize="450,702" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <t:Save_Test_Data DisplayName="Save Test Data" sap:VirtualizedContainerService.HintSize="388,192" sap2010:WorkflowViewState.IdRef="Save_Test_Data_1" TestCaseData_FolderPath="C://UiPathTestAutomation/TestExecutionResults">
            <t:Save_Test_Data.TestCaseData_FileName>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">TestName</CSharpValue>
              </InArgument>
            </t:Save_Test_Data.TestCaseData_FileName>
            <t:Save_Test_Data.TestCaseJSONObject>
              <InArgument x:TypeArguments="njl:JObject">
                <CSharpValue x:TypeArguments="njl:JObject" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">JsonForLogging</CSharpValue>
              </InArgument>
            </t:Save_Test_Data.TestCaseJSONObject>
          </t:Save_Test_Data>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReusableMethods\\CCA\\GenerateWorkflowAnalyserPercentage.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="ReusableMethods\\CCA\\GenerateWorkflowAnalyserPercentage.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="ui:UiElement" x:Key="InputElement">
                <CSharpValue x:TypeArguments="ui:UiElement" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">RootWindow</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="browser">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">WebBrowserType</CSharpValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="WorkflowAnalyser">
                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">WorkflowAnalyserPer</CSharpValue>
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <acc:KillActiveChromeBrowser sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="KillActiveChromeBrowser_2">
            <acc:KillActiveChromeBrowser.BrowserCloseStatus>
              <OutArgument x:TypeArguments="x:Boolean">
                <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">AppLaunchStatus</CSharpReference>
              </OutArgument>
            </acc:KillActiveChromeBrowser.BrowserCloseStatus>
            <acc:KillActiveChromeBrowser.BrowserType>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">WebBrowserType</CSharpValue>
              </InArgument>
            </acc:KillActiveChromeBrowser.BrowserType>
          </acc:KillActiveChromeBrowser>
          <acal:CloseAVW_CMD sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="CloseAVW_CMD_1" />
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>